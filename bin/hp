#!/usr/bin/env node
var usage = 'Usage: hp [options]';
var options = {
    config: {
        alias: 'c',
        default: 'Proxyfile.js',
        describe: 'proxy config file'
    },
    target: {
        alias: 't',
        default: '.',
        describe: 'target directory'
    },
    port: {
        alias: 'p',
        default: 3000,
        describe: 'server port'
    },
    log: {
        default: 'default',
        describe: 'log requests mode'
    },
    live: {
        alias: 'l',
        default: false,
        describe: 'enable live reload changed files'
    },
    watch: {
        alias: 'w',
        default: '**/*.*',
        describe: 'files be watched when live reload enabled'
    },
    console: {
        default: false,
        describe: 'enable remote logging service'
    },
    proxies: {
        type: "array",
        describe: 'enable request proxy'
    },
    open: {
        alias: 'o',
        default: false,
        describe: 'open the default browser after server starting'
    }
};

var taskArgs = require('optimist')
    .usage(usage)
    .options(options);

var argv = taskArgs.argv;
if (argv.h || argv.help) {
    var help = taskArgs.help();
    console.log(help);
} else if (argv.v || argv.version) {
    var pkg = require('../package.json');
    console.log(pkg.version);
} else {
    var config = argv.config;
    var path = require('path');
    var fs = require('fs');
    var _ = require('lodash');
    var hp = require('../');
    try {
        config = path.join(process.cwd(), config);
        _.extend(argv, require(config));
        console.log('Load config file:', config);
    } catch (e) {
        if (fs.existsSync(config) || (argv.config !== options.config.default)) {
            throw e;
        }
    }

    hp.run(argv, function (err) {
        // Done
    });
}
